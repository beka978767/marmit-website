// –ü–ª–∞–≤–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ —è–∫–æ—Ä–Ω—ã–º —Å—Å—ã–ª–∫–∞–º
document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener('click', function (e) {
        e.preventDefault();
        const target = document.querySelector(this.getAttribute('href'));
        if (target) {
            target.scrollIntoView({
                behavior: 'smooth'
            });
        }
    });
});

// –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ
const observerOptions = {
    threshold: 0.1
};

const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
        if (entry.isIntersecting) {
            entry.target.classList.add('fade-in');
        }
    });
}, observerOptions);

// –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ –∑–∞ –≤—Å–µ–º–∏ –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏
document.querySelectorAll('.category-card, .feature-card').forEach(card => {
    observer.observe(card);
});

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Telegram –±–æ—Ç–∞
const TELEGRAM_BOT_TOKEN = '7428000904:AAHo9J52ly869iBUieGc-kihMznyUCV0JME';
const TELEGRAM_CHAT_ID = '-1002609915145';

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
async function sendToTelegram(message) {
    const url = `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`;
    const params = {
        chat_id: TELEGRAM_CHAT_ID,
        text: message,
        parse_mode: 'HTML'
    };

    try {
        console.log('–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:', { url, params });

        const response = await fetch(url, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(params)
        });

        const responseData = await response.json();
        console.log('–û—Ç–≤–µ—Ç –æ—Ç Telegram:', responseData);

        if (!response.ok) {
            throw new Error(`–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: ${responseData.description || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`);
        }

        return true;
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞:', error);
        alert(`–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: ${error.message}`);
        return false;
    }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
document.querySelector('.contact-form').addEventListener('submit', async function(e) {
    e.preventDefault();
    
    alert('–§–æ—Ä–º–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è...'); // –¢–µ—Å—Ç–æ–≤—ã–π alert
    
    const formStatus = document.getElementById('formStatus');
    const submitButton = this.querySelector('button[type="submit"]');
    
    // –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞ –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏
    submitButton.disabled = true;
    submitButton.textContent = '–û—Ç–ø—Ä–∞–≤–∫–∞...';
    
    // –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
    const formData = {
        name: this.querySelector('input[name="name"]').value,
        phone: this.querySelector('input[name="phone"]').value,
        email: this.querySelector('input[name="email"]').value,
        message: this.querySelector('textarea[name="message"]').value
    };
    
    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è Telegram
    const message = `
üîî <b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞ MARMIT</b>

üë§ <b>–ò–º—è:</b> ${formData.name}
üì± <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> ${formData.phone}
üìß <b>Email:</b> ${formData.email}

üí¨ <b>–°–æ–æ–±—â–µ–Ω–∏–µ:</b>
${formData.message}
`;

    try {
        const success = await sendToTelegram(message);
        
        if (success) {
            formStatus.textContent = '–°–ø–∞—Å–∏–±–æ! –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.';
            formStatus.className = 'form-status success';
            this.reset(); // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É
        } else {
            throw new Error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏');
        }
    } catch (error) {
        formStatus.textContent = '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.';
        formStatus.className = 'form-status error';
    } finally {
        // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É
        submitButton.disabled = false;
        submitButton.textContent = '–û—Ç–ø—Ä–∞–≤–∏—Ç—å';
    }
});



// –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —à–∞–ø–∫–∞ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
let lastScroll = 0;
const header = document.querySelector('header');

window.addEventListener('scroll', () => {
    const currentScroll = window.pageYOffset;
    
    if (currentScroll <= 0) {
        header.classList.remove('scroll-up');
        return;
    }
    
    if (currentScroll > lastScroll && !header.classList.contains('scroll-down')) {
        // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –≤–Ω–∏–∑
        header.classList.remove('scroll-up');
        header.classList.add('scroll-down');
    } else if (currentScroll < lastScroll && header.classList.contains('scroll-down')) {
        // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –≤–≤–µ—Ä—Ö
        header.classList.remove('scroll-down');
        header.classList.add('scroll-up');
    }
    
    lastScroll = currentScroll;
});
